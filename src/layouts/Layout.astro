---
import { ViewTransitions } from "astro:transitions";
import NavBar from "../components/NavBar.astro";
import "@fontsource-variable/onest";
import Background from "../components/Background.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body
    class="font-onest root relative w-full min-h-screen text-white dark:bg-slate-800 bg-slate-50 transition-all pt-24"
  >
    <NavBar />
    <section class="w-full h-full flex flex-col z-10 relative">
      <slot />
    </section>
    <Background />
  </body>
</html>
<style is:global>
  :root {
    --accent: 136, 58, 234;
    --accent-light: 224, 204, 250;
    --accent-dark: 49, 10, 101;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      rgb(var(--accent-light)) 30%,
      white 60%
    );
  }
  html {
    font-family: system-ui, sans-serif;
    background: #fcf8f7;
    background-size: 224px;
    scroll-behavior: smooth;
  }
  .main {
    @apply flex h-full mx-auto;
  }
  body::-webkit-scrollbar {
    width: 14px;
    display: block;
    background: linear-gradient(
      rgb(241 245 249 / 0.8) calc(3.5rem - 2px),
      rgb(255 255 255 / 0.2) calc(3.5rem - 2px),
      rgb(255 255 255 / 0.2) calc(3.6rem - 2px),
      rgb(248 250 252 / 1) calc(3.6rem - 2px)
    );
  }
  body::-webkit-scrollbar-thumb {
    border: 5px solid transparent;
    display: block;
    background: #787878;
    border-radius: 10px;
    background-clip: padding-box;
  }
  html.dark body {
    background-color: rgb(30 41 59 / 1);
  }
  html.dark body::-webkit-scrollbar {
    background: linear-gradient(
      rgb(17 24 39 / .96) calc(3.5rem - 2px),
      rgb(40 48 65 /1) calc(3.5rem - 2px),
      rgb(40 48 65 /1) calc(3.6rem - 2px),
      rgb(30 41 59 /1) calc(3.6rem - 2px)
    );
  }
</style>
